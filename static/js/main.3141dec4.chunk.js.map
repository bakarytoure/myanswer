{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","className","class","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mOAgEeA,MA7Df,WACE,OACE,yBAAKC,UAAU,+BACb,yBAAKC,MAAM,QACT,yBAAKA,MAAM,wCAAX,qCAGA,yBAAKA,MAAM,aACT,uBAAGA,MAAM,aACP,6XASF,kFACA,4BACE,waAQA,mSAQF,2BACE,mKAKF,4BACE,8NAKA,4MAOJ,yBAAKA,MAAM,0BAAX,mBC9CYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.3141dec4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"container mt-5 text-justify\">\n      <div class=\"card\">\n        <div class=\"card-header text-center text-success\">\n          My Modeste Answer To Your Request\n        </div>\n        <div class=\"card-body\">\n          <p class=\"card-text\">\n            <strong>\n              I am well educated, peaceful, and respectful person. Therefore, I\n              respect everyone in the company if you respect me of course. So,\n              there is no need to be against anybody, because I am enough mature\n              and responsible to behave like that (next February, 12 I will have\n              30 years old), but I have just the ability to observe and know\n              what's going on.\n            </strong>\n          </p>\n          <p>However, the few things that made me feel bad were:</p>\n          <ol>\n            <li>\n              While we were painting last Tuesday, He was passing us directly to\n              his car without telling anything about going home. It was already\n              half past 3 pm, then I told my friend we might stop working and go\n              home I guess. Can you imagine if I did the same thing without\n              letting him know, what would happen the next day? Probably I can\n              lose my job. So As a boss, he supposed to give us a good example.\n            </li>\n            <li>\n              I don't like the way he yells on the person at all and without any\n              valid reason sometimes. I am a smart person, so he can just\n              explain or tell you what to do, and correct you if you did a\n              mistake without yelling. And then you can work well without\n              confusion.\n            </li>\n          </ol>\n          <p>\n            <strong>\n              This last part is not directly related to him, but he is usually\n              our boss, so he might know everything going in the container:\n            </strong>\n          </p>\n          <ol>\n            <li>\n              I donâ€™t mind at all of working in the container if there is,\n              because I came to Campol to work. However, if we are working we\n              should work together till we finish unpacking the container.\n            </li>\n            <li>\n              But, if they know that Pani Lidia is probably not coming, one or\n              more than one polish people leave the container, then we will be\n              only black people who will be unpacking.\n            </li>\n          </ol>\n        </div>\n        <div class=\"card-footer text-muted\">Bakary Toure</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}